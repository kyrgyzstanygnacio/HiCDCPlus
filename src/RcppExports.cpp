// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// straw
Rcpp::DataFrame straw(std::string norm, std::string fn, std::string ch1, std::string ch2, std::string u, int bs);
RcppExport SEXP _HiCDCPlus_straw(SEXP normSEXP, SEXP fnSEXP, SEXP ch1SEXP, SEXP ch2SEXP, SEXP uSEXP, SEXP bsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type norm(normSEXP);
    Rcpp::traits::input_parameter< std::string >::type fn(fnSEXP);
    Rcpp::traits::input_parameter< std::string >::type ch1(ch1SEXP);
    Rcpp::traits::input_parameter< std::string >::type ch2(ch2SEXP);
    Rcpp::traits::input_parameter< std::string >::type u(uSEXP);
    Rcpp::traits::input_parameter< int >::type bs(bsSEXP);
    rcpp_result_gen = Rcpp::wrap(straw(norm, fn, ch1, ch2, u, bs));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HiCDCPlus_straw", (DL_FUNC) &_HiCDCPlus_straw, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_HiCDCPlus(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
